name: "publish-electron"
on:
  push:
    tags:
      - "v*" # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - name: Check out git repository
        uses: actions/checkout@v3.0.0

      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 18

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.cache/electron
            ~/.cache/electron-builder
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile --network-timeout=60000

      - name: Build preparation
        run: yarn build

      - name: Build electron windows
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          echo "Starting Windows build..."
          yarn build-ele:win || (echo "Build failed with %ERRORLEVEL%" && exit /b 1)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder

      - name: Build MacOS App
        if: matrix.os == 'macos-latest'
        run: yarn build-ele:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Artifacts
        if: success() # 只在构建成功时执行
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv apps/web/dist-ele/*.exe artifacts/ || echo "No exe files found"
          else
            mv apps/web/dist-ele/*.dmg artifacts/ || echo "No dmg files found"
          fi

      - name: upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: ${{ matrix.os }}
          path: artifacts

      - name: release
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "artifacts/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
